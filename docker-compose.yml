version: '3.4'

services:
  webapi:
    #image: ${DOCKER_REGISTRY-}webapi
    build:
      context: .
      dockerfile: src/WebApi/Dockerfile
    ports:
      - "8080:80"
      - "8085:443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__SqlServer=Server=sqlserver,1433;Database=uCondo;User Id=sa;Password=SqlServer2019!;Encrypt=False;
    depends_on:
     - sqlserver
    #  - elasticsearch
    #  - rabbit
    #  - redis
    #  - mongo


  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      SA_PASSWORD: "SqlServer2019!"
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Developer"
    ports:
      - "1433:1433"
 
  

  # rabbit:
  #   image: rabbitmq:3.11.9-management
  #   ports:
  #     - "5672:5672"
  #     - "15672:15672"
  # redis:
  #   image: redis
  #   ports:
  #     - "6379:6379"

  # mongo:
  #   image: mongo
  #   restart: always
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: root
  #     MONGO_INITDB_ROOT_PASSWORD: example

  # mongo-express:
  #   image: mongo-express
  #   restart: always
  #   ports:
  #     - 8081:8081
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: root
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: example
  #     ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/

#open powershell
#wsl -d docker-desktop
#sysctl -w vm.max_map_count=262144
  #elk:
  #  image: sebp/elk:7.17.1
  #  ports:
  #   - "5601:5601"
  #   - "9200:9200"
  #   - "5044:5044"

  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.11.1
  #   ports:
  #     - "9200:9200"
  #     - "9300:9300"
  #   networks:
  #     - testes-elastic
  #   environment:
  #     discovery.type: single-node
  #     ES_JAVA_OPTS: "-Xms1g -Xmx1g"
  # kibana:
  #   image: docker.elastic.co/kibana/kibana:7.11.1
  #   ports:
  #     - "5601:5601"
  #   networks:
  #     - testes-elastic
  #   depends_on:
  #     - elasticsearch


  # grafana:
  #   image: grafana/grafana
  #   container_name: grafana
  #   volumes:
  #     - grafana_test_data:/var/lib/grafana
  #   ports:
  #     - 3000:3000
  #   networks:
  #     - testes-elastic

# networks: 
#   testes-elastic:
#     driver: bridge

# volumes:
#   grafana_test_data: 